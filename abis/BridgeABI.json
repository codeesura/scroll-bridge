pragma solidity ^0.8.0;

contract MyContract {
    // Constructor
    constructor() {}

    // Events

    // Event for depositing ERC20 tokens
    event DepositERC20(
        address indexed l1Token,
        address indexed l2Token,
        address indexed from,
        address to,
        uint256 amount,
        bytes data
    );

    // Event for depositing Ether
    event DepositETH(
        address indexed from,
        address indexed to,
        uint256 amount,
        bytes data
    );

    // Event for finalizing withdrawal of ERC20 tokens
    event FinalizeWithdrawERC20(
        address indexed l1Token,
        address indexed l2Token,
        address indexed from,
        address to,
        uint256 amount,
        bytes data
    );

    // Event for finalizing withdrawal of Ether
    event FinalizeWithdrawETH(
        address indexed from,
        address indexed to,
        uint256 amount,
        bytes data
    );

    // Event for initializing the contract
    event Initialized(uint8 version);

    // Event for transferring ownership
    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);

    // Event for refunding ERC20 tokens
    event RefundERC20(address indexed token, address indexed recipient, uint256 amount);

    // Event for refunding Ether
    event RefundETH(address indexed recipient, uint256 amount);

    // Event for setting default ERC20 gateway
    event SetDefaultERC20Gateway(address indexed oldDefaultERC20Gateway, address indexed newDefaultERC20Gateway);

    // Event for setting ERC20 gateway
    event SetERC20Gateway(address indexed token, address indexed oldGateway, address indexed newGateway);

    // Event for setting ETH gateway
    event SetETHGateway(address indexed oldETHGateway, address indexed newEthGateway);

    // Functions

    // Function to get ERC20 gateway
    function ERC20Gateway(address) external view returns (address) {}

    // Function to get default ERC20 gateway
    function defaultERC20Gateway() external view returns (address) {}

    // Function to deposit ERC20 tokens
    function depositERC20(address _token, uint256 _amount, uint256 _gasLimit) external payable {}

    // Function to deposit ERC20 tokens to a specific address
    function depositERC20(address _token, address _to, uint256 _amount, uint256 _gasLimit) external payable {}

    // Function to deposit ERC20 tokens and call a function on the recipient
    function depositERC20AndCall(address _token, address _to, uint256 _amount, bytes calldata _data, uint256 _gasLimit) external payable {}

    // Function to deposit Ether
    function depositETH(uint256 _amount, uint256 _gasLimit) external payable {}

    // Function to deposit Ether to a specific address
    function depositETH(address _to, uint256 _amount, uint256 _gasLimit) external payable {}

    // Function to deposit Ether and call a function on the recipient
    function depositETHAndCall(address _to, uint256 _amount, bytes calldata _data, uint256 _gasLimit) external payable {}

    // Function to get ETH gateway
    function ethGateway() external view returns (address) {}

    // Function to finalize withdrawal of ERC20 tokens
    function finalizeWithdrawERC20(address, address, address, address, uint256, bytes calldata) external payable {}

    // Function to finalize withdrawal of Ether
    function finalizeWithdrawETH(address, address, uint256, bytes calldata) external payable {}

    // Function to get gateway in context
    function gatewayInContext() external view returns (address) {}

    // Function to get ERC20 gateway
    function getERC20Gateway(address _token) external view returns (address) {}

    // Function to get L2 ERC20 address
    function getL2ERC20Address(address _l1Address) external view returns (address) {}

    // Function to initialize the contract
    function initialize(address _ethGateway, address _defaultERC20Gateway) external {}

    // Function to get owner
    function owner() external view returns (address) {}

    // Function to renounce ownership
    function renounceOwnership() external {}

    // Function to request ERC20 tokens
    function requestERC20(address _sender, address _token, uint256 _amount) external returns (uint256) {}

    // Function to set default ERC20 gateway
    function setDefaultERC20Gateway(address _newDefaultERC20Gateway) external {}

    // Function to set ERC20 gateway
    function setERC20Gateway(address[] calldata _tokens, address[] calldata _gateways) external {}

    // Function to set ETH gateway
    function setETHGateway(address _newEthGateway) external {}

    // Function to transfer ownership
    function transferOwnership(address newOwner) external {}
}
